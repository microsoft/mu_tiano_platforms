## @file
# Azure Pipeline build file for building a platform.
#
# Platform: QemuQ35
# OS: Windows
# Toolchain: VS2022
#
# Copyright (c) Microsoft Corporation.
# SPDX-License-Identifier: BSD-2-Clause-Patent
##

resources:
  repositories:
    - repository: mu_devops
      type: github
      endpoint: microsoft
      name: microsoft/mu_devops
      ref: main

trigger:
- main
- release/202202

pr:
- main
- release/202202

jobs:
  - job: Platform_CI
    variables:
      package: 'QemuQ35Pkg'
      vm_image: 'windows-2022'
      should_run: true
      run_flags: "SHUTDOWN_AFTER_RUN=TRUE QEMU_HEADLESS=TRUE EMPTY_DRIVE=TRUE"

    #Use matrix to speed up the build process
    strategy:
        matrix:

          QemuQ35_DEBUG:
            Build.File: "Platforms/$(package)/PlatformBuild.py"
            Build.Arch: "IA32,X64"
            Build.Flags: ""
            Build.Target: "DEBUG"
            Run.Flags: $(run_flags)
            Run: $(should_run)

          QemuQ35_RELEASE:
            Build.File: "Platforms/$(package)/PlatformBuild.py"
            Build.Arch: "IA32,X64"
            Build.Flags: ""
            Build.Target: "RELEASE"
            Run.Flags: $(run_flags)
            Run: $(should_run)

          # NOOPT build too big to fit in FV.
          #QemuQ35_NOOPT:
          #   Build.File: "Platforms/$(package)/PlatformBuild.py"
          #   Build.Arch: "IA32,X64"
          #   Build.Flags: ""
          #   Build.Target: "NOOPT"
          #   Run.Flags: $(run_flags)
          #   Run: $(should_run)

    workspace:
      clean: all

    pool:
      vmImage: $(vm_image)

    steps:
    - template: Steps/BuildPlatform.yml@mu_devops
      parameters:
        tool_chain_tag: VS2022
        build_pkg: $(package)
        build_target: $(Build.Target)
        build_arch: $(Build.Arch)
        build_file: $(Build.File)
        build_flags: $(Build.Flags)
        run_flags: $(Run.Flags)
        extra_install_step:
        - powershell: choco install qemu --version=2020.08.14; Write-Host "##vso[task.prependpath]c:\Program Files\qemu"
          displayName: Install QEMU and Set QEMU on path # friendly name displayed in the UI
          condition: and(gt(variables.pkg_count, 0), succeeded())
        extra_artifacts: |
          **/QEMUQ35_*.fd

